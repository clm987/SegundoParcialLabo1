/*
 * controller.c
 *
 *  Created on: 20 Jun 2020
 *      Author: Carlos
 */
#include "IOdata.h"
#include "parser.h"
#include "LinkedList.h"
#include "articulo.h"
#include "controller.h"
int controller_loadFromText(char* path , LinkedList* pArrayListArticulos)
{
	FILE* file;
	int retCode = -1;
	int length;

	length = ll_len(pArrayListArticulos);

	if(length == 0)
	{
		file = fopen(path,"r");

		if(file == NULL)
		{
		 showMessage ("Ocurrio un error al abrir el archivo. Se cerrara la aplicacion");
		 system("pause");
		}

		if(!parser_eArticuloFromText(file , pArrayListArticulos))
		{
			retCode = 0;
		}

		fclose(file);

		if(retCode == 0)
		{
		showMessage("Base de articulos cargada con exito!");
		system("pause");
		}
	}
	else
	{
		showMessage("La base de articulos ya fue cargada previamente!");
	}
//	printArticulos(pArrayListArticulos);
	// system("pause");
    return retCode;
}

int printArticulos(LinkedList* this)
{
	int retCode = -1;
	int length;
	int i;
    int bufferId;
    int rubroId;
    char bufferMedida[128];
    char bufferArticulo[128];
    char bufferRubroNombre[128];
    float bufferPrecio;
	eArticulo* auxP;
	auxP = articulo_new();

	length = ll_len(this);

	for(i=0; i<length; i++)
	{
		auxP = (eArticulo*)ll_get(this,i);

		getArticulos(&bufferId,bufferMedida,bufferArticulo,&bufferPrecio,bufferRubroNombre,&rubroId,auxP);
		printf("%-5s %-10s %-40s %-10s %-30s %-5s\n", "ID","MEDIDA","ARTICULO","PRECIO","NOMBRE DEL RUBRO","ID DEL RUBRO");
		printf("\n%-5d  %-10s %-40s %-10.2f %-30s %-5d\n", bufferId,bufferMedida,bufferArticulo,bufferPrecio,bufferRubroNombre,rubroId);
		retCode = 0;
	}
	return retCode;
}

int controller_saveAsText(char* path , LinkedList* pArrayListArticulos)
{
		int retCode = -1;
	    int i;
	    int length;
	    int bufferId;
	    char bufferMedida[128];
	    char bufferArticulo[128];
	    char bufferRubroNombre[128];
	    float bufferPrecio;
	    int rubroId;
	  //  int bufferCantidadEntradas;
	   // int bufferDia;


	    if(path!=NULL && pArrayListArticulos!=NULL)
	    {
	    	length = ll_len(pArrayListArticulos);

	        if(length == 0)
	        {
	        	showMessage("Aun no hay articulos cargados.");
	        	system("pause");
	        }
	        else
	        {
		        FILE* pFile;
		        eArticulo* auxP = NULL;
		  //      Eventas* auxPruba = (Eventas*)ll_get(pArrayListVentas,3);
		        //getEventas(&bufferId,bufferNombrePelicula,&bufferDia,bufferDiaNombre,&bufferCantidadEntradas,&bufferSala,&bufferMonto,auxPruba);
		    //    printf("\nASI ESTAN LOS DATOS EN EL ULTIMO ELEMENTO: %d  %s %d %s %d %d %f\n", bufferId,bufferNombrePelicula,bufferDia,bufferDiaNombre,bufferCantidadEntradas,bufferSala,bufferMonto);
		   //     system("pause");
		        auxP = articulo_new();
		        pFile = fopen(path,"w");
					if(pFile!=NULL )
					{ //ll_map(pArrayListArticulos,calculoDeDescuentos);

				//		printf("%-5s %-10s %-40s %-10s %-30s %-5s\n", "ID","MEDIDA","ARTICULO","PRECIO","NOMBRE DEL RUBRO","ID DEL RUBRO");
						fprintf(pFile, "%-5s %-10s %-40s %-10s %-30s %-5s\n", "ID","MEDIDA","ARTICULO","PRECIO","NOMBRE DEL RUBRO","ID DEL RUBRO");
						for(i=0; i<length; i++)
						{
							auxP = (eArticulo*)ll_get(pArrayListArticulos,i);
							getArticulos(&bufferId,bufferMedida,bufferArticulo,&bufferPrecio,bufferRubroNombre,&rubroId,auxP);
						//	printf("\nASI ESTAN LOS DATOS EN CADA ELEMENTO: %d  %s %d %s %d %d %f\n", bufferId,bufferNombrePelicula,bufferDia,bufferDiaNombre,bufferCantidadEntradas,bufferSala,bufferMonto);
						//	system("pause");
							if(auxP != NULL)
							{

								if(!getArticulos(&bufferId,bufferMedida,bufferArticulo,&bufferPrecio,bufferRubroNombre,&rubroId,auxP))
								{
								//	printf("El nombre de peli va a la impresora asi: %s", bufferNombrePelicula);
								//	system("pause");
								//	printf("\n%-5d  %-10s %-40s %-10.2f %-30s %-5d\n", bufferId,bufferMedida,bufferArticulo,bufferPrecio,bufferRubroNombre,rubroId)
									fprintf(pFile, "%d,%s,%s,%.2f,%s,%d\n",bufferId,bufferMedida,bufferArticulo,bufferPrecio,bufferRubroNombre,rubroId);
								}
								else
								{
									printf("Error\n");
								}
								retCode = 0;
							}
						}
					if(retCode == 0)
					{
						showMessage("ARCHIVO GUARDADO CON EXITO");
						system("pause");
					}



						fclose(pFile);
					}
	        }
		}

	    if(retCode == 0)
	    {
	    	showMessage("Archivo guardado con exito!");
	    }
	    return retCode;
}






































//////////////////////////////////////
/*
int controller_saveAsText(char* path , LinkedList* pArrayListVentas)
{
		int retCode = -1;
	    int length;
	    int cUnidadesTotales;
	    int cUnidadesPorMontoA;
	    int cUnidadesPorMontoB;
	    int cUnidadesPorProducto;
	    char bufferTitulo1[] = "- Cantidad de unidades vendidas totales:";
	    char bufferTitulo2[] = "- Cantidad de ventas por un monto mayor a $10000:";
	    char bufferTitulo3[] = "- Cantidad de ventas por un monto mayor a $20000:";
	    char bufferTitulo4[] = "- Cantidad de TVs LCD vendidas:";

	    if(path!=NULL && pArrayListVentas!=NULL)
	    {
	    	length = ll_len(pArrayListVentas);

	        if(length == 0)
	        {
	        	showMessage("Aun no hay ventas cargadas.");
	        	system("pause");
	        }
	        else
	        {
	        	cUnidadesTotales	= ll_count(pArrayListVentas,unidadesVendidas);
	        	cUnidadesPorMontoA	= ll_count(pArrayListVentas,ventasPorMontoA);
	        	cUnidadesPorMontoB  = ll_count(pArrayListVentas,ventasPorMontoB);
	        	cUnidadesPorProducto = ll_count(pArrayListVentas,ventasPorProductoA);

		        FILE* pFile;
		        pFile = fopen(path,"w");
					if(pFile!=NULL )
					{
						fprintf(pFile, "%s\n", "********************");
						fprintf(pFile, "%s\n", "Informe de Ventas");
						fprintf(pFile, "%s\n", "********************");
						fprintf(pFile, "%s%d\n%s%d\n%s%d\n%s%d\n", bufferTitulo1, cUnidadesTotales, bufferTitulo2, cUnidadesPorMontoA,bufferTitulo3,cUnidadesPorMontoB,bufferTitulo4,cUnidadesPorProducto);
					retCode = 0;
					}

					if(retCode == 0)
					{
						showMessage("ARCHIVO GUARDADO CON EXITO");
						system("pause");
					}
				fclose(pFile);
			}
	    }

	    return retCode;
	}*/
